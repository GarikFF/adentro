<%
let clusterTimes = 0;
let clusterIds = [];

function renderBar() {
	%>
	<div class="bar"></div>
	<%
}

function renderElement(element, nextElement) {
	const {id, visualization, manPosition, times, class: className} = element;
%>
	<div class="element element--<%= className %>"
		style="flex: <%= times %>;"
		id="<%= id %>"
		data-visualization="<%= visualization %>"
		data-manposition="<%= manPosition %>"
		data-times="<%= times %>">
		<%= times %>
	</div>
<%
}

function renderElementTitle(element, nextElement) {
	const {id, title, times, textOffset = 0, yOffset, class: className} = element;

	const nextElementIsSame = element.title === nextElement.title;
	clusterIds.push(id);

	if (!nextElementIsSame) {
	%>
		<div class="element-title <%= className %> <%= clusterIds.map(id => `element-title--${id}`).join(' ') %>"
			style="flex: <%= clusterTimes + times %>;">
			<div class="element-title__text <%= yOffset ? 'element-title__text--offset' : '' %>"><%- title
				.replace(/\$m\[([^\]]+)\]/g, `<span class="element-text--man">$1</span>`)
				.replace(/\$w\[([^\]]+)\]/g, `<span class="element-text--woman">$1</span>`)
				.replace(/->/g, '<br>')
			%></div>
		</div>
	<%
		clusterTimes = 0;
		clusterIds = [];
	} else {
		clusterTimes = clusterTimes + times;
	}
}

function renderPart(elements) {
	clusterTimes = 0;
	clusterIds = [];
%>
<div>
	<div class="scheme-row">
	<%
		elements.forEach((element, index) => {
			if (element.bar) {
				renderBar();
			} else {
				const nextElement = (index + 1 < elements.length) ? elements[index + 1] : {};

				renderElement(element, nextElement);
			}
		});
	%>
	</div>
	<div class="title-row">
	<%
		elements.forEach((element, index) => {
			if (element.bar) {
				renderBar();
			} else {
				const nextElement = (index + 1 < elements.length) ? elements[index + 1] : {};

				renderElementTitle(element, nextElement);
			}
		});
	%>
	</div>
</div>
<%
}
%>

<div class="scheme">
	<%
	scheme.forEach((elements) => {
		renderPart(elements);
	});
	%>
</div>
